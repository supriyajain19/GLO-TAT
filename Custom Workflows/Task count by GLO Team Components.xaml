<Activity mc:Ignorable="sap sap2010 sads" x:Class="Task_count_by_GLO_Team_Components"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CurrentMonth" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentYear" Type="InArgument(x:String)" />
    <x:Property Name="in_GLOTemplatePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Task_count_by_GLO_Team_Components_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Second sheet pivot table Sequence" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim p_ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim p_rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA; 'wb = excel.Workbooks.Open(&quot;C:\Users\svc_friend2\Documents\GLO_All_Data_with_SLAs 5_7_19.xlsx&quot;)'Open the excel the file'&#xD;&#xA; wb1=excel.Workbooks.Open(arg_GLOTemplatePath+&quot;GLO_&quot;+arg_CurrentFiscalMonth+&quot;’&quot;+arg_CurrentFiscalYear+&quot;_YTD_DASHBOARD.xlsb&quot;)&#xD;&#xA; excel.Visible=True&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; ws=CType(wb1.Sheets(&quot;Data&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; ws.Activate&#xD;&#xA;&#xD;&#xA; lastRow = ws.UsedRange.Rows.Count&#xD;&#xA;Dim con As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;Dim cn As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;For Each con In wb1.Connections&#xD;&#xA; If con.Name &lt;&gt; &quot;DataModel&quot; Then&#xD;&#xA; cn =con&#xD;&#xA; End If&#xD;&#xA;Next &#xD;&#xA;  &#xD;&#xA; ' With wb1&#xD;&#xA; &#xD;&#xA;' cn=  .Connections.Add2(Name :=&quot;SpendDataModel&quot;,Description:=&quot;DataModel&quot;,ConnectionString:=&quot;WORKSHEET;&quot;+wb1.FullName,CommandText:=ws.Name+&quot;!&quot;+ws.Range(&quot;A1&quot;).CurrentRegion.address,lCmdtype:=Microsoft.Office.Interop.Excel.XlCmdType.xlCmdExcel,CreateModelConnection:=True)&#xD;&#xA;&#xD;&#xA; 'End With &#xD;&#xA;    &#xD;&#xA; 'rng=ws.Range(&quot;A1&quot;,&quot;O&quot;+lastRow.ToString)'Selects the given range of sheet 1'&#xD;&#xA; 'p_ws=CType(wb.Sheets.Add,Microsoft.Office.Interop.Excel.Worksheet)'create a empty and and name the sheet as pivot table'&#xD;&#xA; 'p_ws.Name=&quot;Pivot Test&quot;&#xD;&#xA; p_ws=CType(wb1.Sheets(&quot;Task count by GLO Team&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; p_ws.Activate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; p_rng= CType(p_ws.Range(&quot;A14&quot;),Microsoft.Office.Interop.Excel.Range) 'Specify the first cell for the pivot table'&#xD;&#xA; &#xD;&#xA; 'Creation pivot Cache and pivot table '&#xD;&#xA; Dim oPivotCache As Microsoft.Office.Interop.Excel.PivotCache=Nothing&#xD;&#xA; Dim oPivotTables As Microsoft.Office.Interop.Excel.PivotTables=Nothing&#xD;&#xA; Dim oPivotTable As Microsoft.Office.Interop.Excel.PivotTable=Nothing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;oPivotCache =CType(wb1.PivotCaches.Create(SourceType:=Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal,SourceData:=cn,Version:=Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion15),Microsoft.Office.Interop.Excel.PivotCache)&#xD;&#xA;&#xD;&#xA;oPivotTables=DirectCast(p_ws.PivotTables(Type.Missing),Microsoft.Office.Interop.Excel.PivotTables)&#xD;&#xA;&#xD;&#xA; oPivotTable=oPivotTables.Add(oPivotCache,p_rng,&quot;TASK COUNT AND AVG.TAT DAYS BY GLO TEAM&quot;,Type.Missing,Type.Missing)'first paramenter is cache,range the table should start,table name'&#xD;&#xA; oPivotTable.SmallGrid=False&#xD;&#xA; oPivotTable.ShowTableStyleRowStripes=True&#xD;&#xA; oPivotTable.TableStyle2=&quot;PivotStyleMedium2&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; 'Creation of pivot Fields'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Dim CubeField1 As Microsoft.Office.Interop.Excel.CubeField &#xD;&#xA;Dim CubeField2 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField3 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField4 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField5 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField6 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField7 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField8 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField9 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;  Dim CubeField10 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim index As Integer = 1&#xD;&#xA;While index &lt;= CInt(oPivotTable.CubeFields.Count)&#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Yr]&quot;) Then &#xD;&#xA;&#xD;&#xA;  CubeField1= oPivotTable.CubeFields(index)&#xD;&#xA;   CubeField1.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;   CubeField1.CurrentPageName=&quot;[Range].[Task Closed Fiscal Yr].&amp;[FY'&quot;+arg_CurrentFiscalYear+&quot;]&quot;&#xD;&#xA;  'CubeField1.Caption(&quot;Diversity (Yes/No)&quot;)&#xD;&#xA; Else &#xD;&#xA; End If &#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Status]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField2= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField2.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  CubeField2.CurrentPageName=&quot;[Range].[Task Status].&amp;[Closed-Complete]&quot;&#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Ticket Stage]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField3= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  'CubeField3.CurrentPageName=&quot;[Range].[Ticket Stage]&quot;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Catalog]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField4= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Requested For Region]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField5= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging Grouping]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField6= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField6.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Assigned to]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField7= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Number]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField8= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField8 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlDistinctCount)&#xD;&#xA;   oPivotTable.AddDataField(CubeField8)&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging (in Days)]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField9= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField9 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlAverage)&#xD;&#xA;  oPivotTable.AddDataField(CubeField9) &#xD;&#xA; &#xD;&#xA;  &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; &#xD;&#xA;  &#xD;&#xA; index += 1&#xD;&#xA;End While&#xD;&#xA;&#xD;&#xA; 'oPivotTable.PivotFields(&quot;[Measures].[Average of Task Aging (in Days)]&quot;).NumberFormat=&quot;00&quot;&#xD;&#xA;Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(oPivotTable.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Measures].[Average of Task Aging (in Days)]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.NumberFormat=&quot;00&quot;&#xD;&#xA;&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT AND AVG.TAT DAYS BY GLO TEAM&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; 'Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(PivotAPSpend.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Ticket Stage].[Ticket Stage]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index1 As Integer = 1&#xD;&#xA;Dim arrstring As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm In pivotItms&#xD;&#xA;&#xD;&#xA; If pvtitm.Name.equals( &quot;[Range].[Ticket Stage].&amp;[Cancelled]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring=CType(pvtitm.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring.Add(itemstring)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF.VisibleItemsList =arrstring.ToArray&#xD;&#xA;    CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA; CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend1 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT AND AVG.TAT DAYS BY GLO TEAM&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs1 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs1 = CType(PivotAPSpend1.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF1 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF1=CType(PTFs1.Item(&quot;[Range].[Item Catalog].[Item Catalog]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms1 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF1.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index2 As Integer = 1&#xD;&#xA;Dim arrstring1 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring1 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm1 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm1 In pivotItms1&#xD;&#xA;&#xD;&#xA; If pvtitm1.Name.equals( &quot;[Range].[Item Catalog].&amp;[Incoming]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring1=CType(pvtitm1.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring1.Add(itemstring1)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF1.VisibleItemsList =arrstring1.ToArray&#xD;&#xA;    CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend2 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT AND AVG.TAT DAYS BY GLO TEAM&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs2 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs2 = CType(PivotAPSpend2.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF2 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF2=CType(PTFs2.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms2 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF2.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index3 As Integer = 1&#xD;&#xA;Dim arrstring2 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring2 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm2 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm2 In pivotItms2&#xD;&#xA;&#xD;&#xA; If pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;[Mandhare, Ajay]&quot;) Or pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring2=CType(pvtitm2.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring2.Add(itemstring2)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF2.VisibleItemsList =arrstring2.ToArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend3 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT AND AVG.TAT DAYS BY GLO TEAM&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs3 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs3 = CType(PivotAPSpend3.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF3 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF3=CType(PTFs3.Item(&quot;[Range].[Requested For Region].[Requested For Region]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms3 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF3.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index4 As Integer = 1&#xD;&#xA;Dim arrstring3 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring3 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm3 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm3 In pivotItms3&#xD;&#xA;&#xD;&#xA; If pvtitm3.Name.equals(&quot;[Range].[Requested For Region].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring3=CType(pvtitm3.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring3.Add(itemstring3)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF3.VisibleItemsList =arrstring3.ToArray&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA;oPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow)  &#xD;&#xA;Dim AddNo As Integer=15&#xD;&#xA;While  p_ws.Range(&quot;A&quot;+AddNo.ToString).Value.ToString&lt;&gt;&quot;Grand Total&quot;&#xD;&#xA;AddNo =AddNo+ 1&#xD;&#xA;End While&#xD;&#xA;p_ws.Range(&quot;A14:B19&quot;).Copy&#xD;&#xA;p_ws.Range(&quot;A&quot;+(AddNo+2).ToString).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues) &#xD;&#xA;&#xD;&#xA;p_ws.Range(&quot;B15:C&quot;+AddNo.ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;p_ws.Range(&quot;B&quot;+(AddNo+3).ToString+&quot;:C&quot;+(AddNo+7).ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;'Dim p_rng As Microsoft.Office.Interop.Excel.Range 'capturing the range of pivottable shhet1''&#xD;&#xA;'Dim lastRow As Integer&#xD;&#xA;Dim chtobjs As Microsoft.Office.Interop.Excel.ChartObjects&#xD;&#xA;Dim chtobj As Microsoft.Office.Interop.Excel.ChartObject&#xD;&#xA;Dim chtobj1 As Microsoft.Office.Interop.Excel.ChartObject&#xD;&#xA;Dim cht As Microsoft.Office.Interop.Excel.Chart&#xD;&#xA;'Dim axs As Axis&#xD;&#xA;rng=p_ws.Range(&quot;A&quot;+(AddNo+3).ToString+&quot;:B&quot;+(AddNo+7).ToString)   &#xD;&#xA;chtobjs = CType(p_ws.ChartObjects(),Microsoft.Office.Interop.Excel.ChartObjects)&#xD;&#xA;chtobj = chtobjs.Add(CType(p_ws.Range(&quot;A&quot;+(AddNo+9).ToString).Left,System.Double),CType(p_ws.Range(&quot;A&quot;+(AddNo+9).ToString).Top,System.Double),350,200)&#xD;&#xA;chtobj.Chart.ChartWizard(p_ws.Range(&quot;A&quot;+(AddNo+3).ToString+&quot;:B&quot;+(AddNo+7).ToString) ,Gallery:=Microsoft.Office.Interop.Excel.XlChartType.xlColumnClustered,Title:=&quot;Distinct Count of Task Number&quot;,CategoryLabels:=True,SeriesLabels:=False,HasLegend:=False)&#xD;&#xA;chtobj.Name=&quot;NewChartObject&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;chtobj.Chart.ApplyDataLabels&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA;Throw es&#xD;&#xA;Finally&#xD;&#xA; wb1.Save&#xD;&#xA; wb1.Close&#xD;&#xA; excel.Quit&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code-TASK COUNT AND AVG. TAT DAYS BY GLO TEAM" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_GLOTemplatePath">[in_GLOTemplatePath]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim p_ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim p_rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA; 'wb = excel.Workbooks.Open(&quot;C:\Users\svc_friend2\Documents\GLO_All_Data_with_SLAs 5_7_19.xlsx&quot;)'Open the excel the file'&#xD;&#xA; wb1=excel.Workbooks.Open(arg_GLOTemplatePath+&quot;GLO_&quot;+arg_CurrentFiscalMonth+&quot;’&quot;+arg_CurrentFiscalYear+&quot;_YTD_DASHBOARD.xlsb&quot;)&#xD;&#xA; excel.Visible=True&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; ws=CType(wb1.Sheets(&quot;Data&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; ws.Activate&#xD;&#xA;&#xD;&#xA; lastRow = ws.UsedRange.Rows.Count&#xD;&#xA; &#xD;&#xA;Dim con As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;Dim cn As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;For Each con In wb1.Connections&#xD;&#xA; If con.Name &lt;&gt; &quot;DataModel&quot; Then&#xD;&#xA; cn =con&#xD;&#xA; End If&#xD;&#xA;Next &#xD;&#xA;  &#xD;&#xA;  'With wb1&#xD;&#xA; &#xD;&#xA; 'cn=  .Connections.Add2(Name :=&quot;SpendDataModel&quot;,Description:=&quot;DataModel&quot;,ConnectionString:=&quot;WORKSHEET;&quot;+wb1.FullName,CommandText:=ws.Name+&quot;!&quot;+ws.Range(&quot;A1&quot;).CurrentRegion.address,lCmdtype:=Microsoft.Office.Interop.Excel.XlCmdType.xlCmdExcel,CreateModelConnection:=True)&#xD;&#xA;&#xD;&#xA; 'End With &#xD;&#xA;    &#xD;&#xA; 'rng=ws.Range(&quot;A1&quot;,&quot;O&quot;+lastRow.ToString)'Selects the given range of sheet 1'&#xD;&#xA; 'p_ws=CType(wb.Sheets.Add,Microsoft.Office.Interop.Excel.Worksheet)'create a empty and and name the sheet as pivot table'&#xD;&#xA; 'p_ws.Name=&quot;Pivot Test&quot;&#xD;&#xA; p_ws=CType(wb1.Sheets(&quot;Task count by GLO Team&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; p_ws.Activate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; p_rng= CType(p_ws.Range(&quot;E13&quot;),Microsoft.Office.Interop.Excel.Range) 'Specify the first cell for the pivot table'&#xD;&#xA; &#xD;&#xA; 'Creation pivot Cache and pivot table '&#xD;&#xA; Dim oPivotCache As Microsoft.Office.Interop.Excel.PivotCache=Nothing&#xD;&#xA; Dim oPivotTables As Microsoft.Office.Interop.Excel.PivotTables=Nothing&#xD;&#xA; Dim oPivotTable As Microsoft.Office.Interop.Excel.PivotTable=Nothing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;oPivotCache =CType(wb1.PivotCaches.Create(SourceType:=Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal,SourceData:=cn,Version:=Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion15),Microsoft.Office.Interop.Excel.PivotCache)&#xD;&#xA;&#xD;&#xA;oPivotTables=DirectCast(p_ws.PivotTables(Type.Missing),Microsoft.Office.Interop.Excel.PivotTables)&#xD;&#xA;&#xD;&#xA; oPivotTable=oPivotTables.Add(oPivotCache,p_rng,&quot;TASK COUNT BY GLO TEAM &amp; BY REGION&quot;,Type.Missing,Type.Missing)'first paramenter is cache,range the table should start,table name'&#xD;&#xA; oPivotTable.SmallGrid=False&#xD;&#xA; oPivotTable.ShowTableStyleRowStripes=True&#xD;&#xA; oPivotTable.TableStyle2=&quot;PivotStyleMedium2&quot;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; 'Creation of pivot Fields'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Dim CubeField1 As Microsoft.Office.Interop.Excel.CubeField &#xD;&#xA;Dim CubeField2 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField3 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField4 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField5 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField6 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField7 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField8 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField9 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;'  Dim CubeField10 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim index As Integer = 1&#xD;&#xA;While index &lt;= CInt(oPivotTable.CubeFields.Count)&#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Yr]&quot;) Then &#xD;&#xA;&#xD;&#xA;  CubeField1= oPivotTable.CubeFields(index)&#xD;&#xA;   CubeField1.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;   CubeField1.CurrentPageName=&quot;[Range].[Task Closed Fiscal Yr].&amp;[FY'&quot;+arg_CurrentFiscalYear+&quot;]&quot;&#xD;&#xA;  'CubeField1.Caption(&quot;Diversity (Yes/No)&quot;)&#xD;&#xA; Else &#xD;&#xA; End If &#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Status]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField2= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField2.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  CubeField2.CurrentPageName=&quot;[Range].[Task Status].&amp;[Closed-Complete]&quot;&#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Ticket Stage]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField3= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  'CubeField3.CurrentPageName=&quot;[Range].[Ticket Stage]&quot;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Catalog]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField4= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Requested For Region]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField5= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging Grouping]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField6= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField6.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Assigned to]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField7= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Number]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField8= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField8 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlDistinctCount)&#xD;&#xA;   oPivotTable.AddDataField(CubeField8)&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  &#xD;&#xA; &#xD;&#xA;  &#xD;&#xA; index += 1&#xD;&#xA;End While&#xD;&#xA;&#xD;&#xA;Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(oPivotTable.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA;&#xD;&#xA;CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY REGION&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; 'Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(PivotAPSpend.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Ticket Stage].[Ticket Stage]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index1 As Integer = 1&#xD;&#xA;Dim arrstring As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm In pivotItms&#xD;&#xA;&#xD;&#xA; If pvtitm.Name.equals( &quot;[Range].[Ticket Stage].&amp;[Cancelled]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring=CType(pvtitm.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring.Add(itemstring)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF.VisibleItemsList =arrstring.ToArray&#xD;&#xA;    CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA; CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend1 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY REGION&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs1 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs1 = CType(PivotAPSpend1.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF1 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF1=CType(PTFs1.Item(&quot;[Range].[Item Catalog].[Item Catalog]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms1 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF1.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index2 As Integer = 1&#xD;&#xA;Dim arrstring1 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring1 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm1 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm1 In pivotItms1&#xD;&#xA;&#xD;&#xA; If pvtitm1.Name.equals( &quot;[Range].[Item Catalog].&amp;[Incoming]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring1=CType(pvtitm1.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring1.Add(itemstring1)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF1.VisibleItemsList =arrstring1.ToArray&#xD;&#xA;    CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend2 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY REGION&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs2 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs2 = CType(PivotAPSpend2.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF2 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF2=CType(PTFs2.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms2 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF2.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index3 As Integer = 1&#xD;&#xA;Dim arrstring2 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring2 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm2 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm2 In pivotItms2&#xD;&#xA;&#xD;&#xA; If pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;[Mandhare, Ajay]&quot;) Or pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring2=CType(pvtitm2.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring2.Add(itemstring2)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF2.VisibleItemsList =arrstring2.ToArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend3 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY REGION&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs3 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs3 = CType(PivotAPSpend3.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF3 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF3=CType(PTFs3.Item(&quot;[Range].[Requested For Region].[Requested For Region]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms3 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF3.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index4 As Integer = 1&#xD;&#xA;Dim arrstring3 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring3 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm3 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm3 In pivotItms3&#xD;&#xA;&#xD;&#xA; If pvtitm3.Name.equals(&quot;[Range].[Requested For Region].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring3=CType(pvtitm3.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring3.Add(itemstring3)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF3.VisibleItemsList =arrstring3.ToArray&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA;oPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow)  &#xD;&#xA;Dim AddNo As Integer=15&#xD;&#xA;While  p_ws.Range(&quot;E&quot;+AddNo.ToString).Value.ToString&lt;&gt;&quot;Grand Total&quot;&#xD;&#xA;AddNo =AddNo+ 1&#xD;&#xA;End While&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;p_ws.Range(&quot;J14&quot;).Value=&quot;Task Count in %&quot;&#xD;&#xA;p_ws.Range(&quot;J15:J&quot;+AddNo.ToString).Formula=&quot;=IFERROR(VLOOKUP(E15,$E$13:$I$&quot;+AddNo.ToString+&quot;,MATCH($I$14,$E$14:$I$14,0),FALSE),0)/IFERROR(VLOOKUP($E$&quot;+AddNo.ToString+&quot;,$E$13:$I$&quot;+AddNo.ToString+&quot;,MATCH($I$14,$E$14:$I$14,0),FALSE),0)&quot;&#xD;&#xA;p_ws.Range(&quot;J15:J&quot;+AddNo.ToString).NumberFormat=&quot;0%&quot;&#xD;&#xA;p_ws.Range(&quot;F15:J&quot;+AddNo.ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA; Throw es&#xD;&#xA;Finally&#xD;&#xA; wb1.Save&#xD;&#xA; wb1.Close&#xD;&#xA; excel.Quit&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code-TASK COUNT BY GLO TEAM &amp; BY REGION" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_GLOTemplatePath">[in_GLOTemplatePath]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim p_ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim p_rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA; 'wb = excel.Workbooks.Open(&quot;C:\Users\svc_friend2\Documents\GLO_All_Data_with_SLAs 5_7_19.xlsx&quot;)'Open the excel the file'&#xD;&#xA; wb1=excel.Workbooks.Open(arg_GLOTemplatePath+&quot;GLO_&quot;+arg_CurrentFiscalMonth+&quot;’&quot;+arg_CurrentFiscalYear+&quot;_YTD_DASHBOARD.xlsb&quot;)&#xD;&#xA; excel.Visible=True&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; ws=CType(wb1.Sheets(&quot;Data&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; ws.Activate&#xD;&#xA;&#xD;&#xA; lastRow = ws.UsedRange.Rows.Count&#xD;&#xA; &#xD;&#xA;Dim con As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;Dim cn As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;For Each con In wb1.Connections&#xD;&#xA; If con.Name &lt;&gt; &quot;DataModel&quot; Then&#xD;&#xA; cn =con&#xD;&#xA; End If&#xD;&#xA;Next &#xD;&#xA;  &#xD;&#xA;  'With wb1&#xD;&#xA; &#xD;&#xA; 'cn=  .Connections.Add2(Name :=&quot;SpendDataModel&quot;,Description:=&quot;DataModel&quot;,ConnectionString:=&quot;WORKSHEET;&quot;+wb1.FullName,CommandText:=ws.Name+&quot;!&quot;+ws.Range(&quot;A1&quot;).CurrentRegion.address,lCmdtype:=Microsoft.Office.Interop.Excel.XlCmdType.xlCmdExcel,CreateModelConnection:=True)&#xD;&#xA;&#xD;&#xA; 'End With &#xD;&#xA;    &#xD;&#xA; 'rng=ws.Range(&quot;A1&quot;,&quot;O&quot;+lastRow.ToString)'Selects the given range of sheet 1'&#xD;&#xA; 'p_ws=CType(wb.Sheets.Add,Microsoft.Office.Interop.Excel.Worksheet)'create a empty and and name the sheet as pivot table'&#xD;&#xA; 'p_ws.Name=&quot;Pivot Test&quot;&#xD;&#xA; p_ws=CType(wb1.Sheets(&quot;Task count by GLO Team&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; p_ws.Activate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; p_rng= CType(p_ws.Range(&quot;L13&quot;),Microsoft.Office.Interop.Excel.Range) 'Specify the first cell for the pivot table'&#xD;&#xA; &#xD;&#xA; 'Creation pivot Cache and pivot table '&#xD;&#xA; Dim oPivotCache As Microsoft.Office.Interop.Excel.PivotCache=Nothing&#xD;&#xA; Dim oPivotTables As Microsoft.Office.Interop.Excel.PivotTables=Nothing&#xD;&#xA; Dim oPivotTable As Microsoft.Office.Interop.Excel.PivotTable=Nothing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;oPivotCache =CType(wb1.PivotCaches.Create(SourceType:=Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal,SourceData:=cn,Version:=Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion15),Microsoft.Office.Interop.Excel.PivotCache)&#xD;&#xA;&#xD;&#xA;oPivotTables=DirectCast(p_ws.PivotTables(Type.Missing),Microsoft.Office.Interop.Excel.PivotTables)&#xD;&#xA;&#xD;&#xA; oPivotTable=oPivotTables.Add(oPivotCache,p_rng,&quot;TASK COUNT BY GLO TEAM &amp; BY QTR&quot;,Type.Missing,Type.Missing)'first paramenter is cache,range the table should start,table name'&#xD;&#xA; oPivotTable.SmallGrid=False&#xD;&#xA; oPivotTable.ShowTableStyleRowStripes=True&#xD;&#xA; oPivotTable.TableStyle2=&quot;PivotStyleMedium2&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; 'Creation of pivot Fields'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Dim CubeField1 As Microsoft.Office.Interop.Excel.CubeField &#xD;&#xA;Dim CubeField2 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField3 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField4 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField5 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField6 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField7 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField8 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField9 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;  Dim CubeField10 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim index As Integer = 1&#xD;&#xA;While index &lt;= CInt(oPivotTable.CubeFields.Count)&#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Yr]&quot;) Then &#xD;&#xA;&#xD;&#xA;  CubeField1= oPivotTable.CubeFields(index)&#xD;&#xA;   CubeField1.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;   CubeField1.CurrentPageName=&quot;[Range].[Task Closed Fiscal Yr].&amp;[FY'&quot;+arg_CurrentFiscalYear+&quot;]&quot;&#xD;&#xA;  'CubeField1.Caption(&quot;Diversity (Yes/No)&quot;)&#xD;&#xA; Else &#xD;&#xA; End If &#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Status]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField2= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField2.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  CubeField2.CurrentPageName=&quot;[Range].[Task Status].&amp;[Closed-Complete]&quot;&#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Ticket Stage]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField3= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  'CubeField3.CurrentPageName=&quot;[Range].[Ticket Stage]&quot;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Catalog]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField4= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Requested For Region]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField5= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging Grouping]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField6= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField6.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Assigned to]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField7= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Number]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField8= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField8 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlDistinctCount)&#xD;&#xA;   oPivotTable.AddDataField(CubeField8)&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;    If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Qtr]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField9= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField9.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; &#xD;&#xA;  &#xD;&#xA; index += 1&#xD;&#xA;End While&#xD;&#xA;&#xD;&#xA;Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(oPivotTable.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA;&#xD;&#xA;CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY QTR&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; 'Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(PivotAPSpend.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Ticket Stage].[Ticket Stage]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index1 As Integer = 1&#xD;&#xA;Dim arrstring As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm In pivotItms&#xD;&#xA;&#xD;&#xA; If pvtitm.Name.equals( &quot;[Range].[Ticket Stage].&amp;[Cancelled]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring=CType(pvtitm.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring.Add(itemstring)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF.VisibleItemsList =arrstring.ToArray&#xD;&#xA;    CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA; CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend1 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY QTR&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs1 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs1 = CType(PivotAPSpend1.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF1 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF1=CType(PTFs1.Item(&quot;[Range].[Item Catalog].[Item Catalog]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms1 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF1.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index2 As Integer = 1&#xD;&#xA;Dim arrstring1 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring1 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm1 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm1 In pivotItms1&#xD;&#xA;&#xD;&#xA; If pvtitm1.Name.equals( &quot;[Range].[Item Catalog].&amp;[Incoming]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring1=CType(pvtitm1.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring1.Add(itemstring1)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF1.VisibleItemsList =arrstring1.ToArray&#xD;&#xA;    CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend2 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY QTR&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs2 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs2 = CType(PivotAPSpend2.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF2 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF2=CType(PTFs2.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms2 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF2.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index3 As Integer = 1&#xD;&#xA;Dim arrstring2 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring2 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm2 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm2 In pivotItms2&#xD;&#xA;&#xD;&#xA; If pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;[Mandhare, Ajay]&quot;) Or pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring2=CType(pvtitm2.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring2.Add(itemstring2)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF2.VisibleItemsList =arrstring2.ToArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend3 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM &amp; BY QTR&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs3 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs3 = CType(PivotAPSpend3.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF3 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF3=CType(PTFs3.Item(&quot;[Range].[Requested For Region].[Requested For Region]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms3 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF3.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index4 As Integer = 1&#xD;&#xA;Dim arrstring3 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring3 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm3 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm3 In pivotItms3&#xD;&#xA;&#xD;&#xA; If pvtitm3.Name.equals(&quot;[Range].[Requested For Region].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring3=CType(pvtitm3.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring3.Add(itemstring3)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF3.VisibleItemsList =arrstring3.ToArray&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA;oPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow)  &#xD;&#xA;&#xD;&#xA;Dim AddNo As Integer=15&#xD;&#xA;While  p_ws.Range(&quot;L&quot;+AddNo.ToString).Value.ToString&lt;&gt;&quot;Grand Total&quot;&#xD;&#xA;AddNo =AddNo+ 1&#xD;&#xA;End While&#xD;&#xA;p_ws.Range(&quot;M15:R&quot;+AddNo.ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA; Throw es&#xD;&#xA;Finally&#xD;&#xA; wb1.Save&#xD;&#xA; wb1.Close&#xD;&#xA; excel.Quit&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code-TASK COUNT BY GLO TEAM &amp; BY QTR" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_GLOTemplatePath">[in_GLOTemplatePath]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim p_ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim p_rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA; 'wb = excel.Workbooks.Open(&quot;C:\Users\svc_friend2\Documents\GLO_All_Data_with_SLAs 5_7_19.xlsx&quot;)'Open the excel the file'&#xD;&#xA; wb1=excel.Workbooks.Open(arg_GLOTemplatePath+&quot;GLO_&quot;+arg_CurrentFiscalMonth+&quot;’&quot;+arg_CurrentFiscalYear+&quot;_YTD_DASHBOARD.xlsb&quot;)&#xD;&#xA; excel.Visible=True&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; ws=CType(wb1.Sheets(&quot;Data&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; ws.Activate&#xD;&#xA;&#xD;&#xA; lastRow = ws.UsedRange.Rows.Count&#xD;&#xA; &#xD;&#xA;Dim con As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;Dim cn As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;For Each con In wb1.Connections&#xD;&#xA; If con.Name &lt;&gt; &quot;DataModel&quot; Then&#xD;&#xA; cn =con&#xD;&#xA; End If&#xD;&#xA;Next &#xD;&#xA;  &#xD;&#xA;  'With wb1&#xD;&#xA; &#xD;&#xA; 'cn=  .Connections.Add2(Name :=&quot;SpendDataModel&quot;,Description:=&quot;DataModel&quot;,ConnectionString:=&quot;WORKSHEET;&quot;+wb1.FullName,CommandText:=ws.Name+&quot;!&quot;+ws.Range(&quot;A1&quot;).CurrentRegion.address,lCmdtype:=Microsoft.Office.Interop.Excel.XlCmdType.xlCmdExcel,CreateModelConnection:=True)&#xD;&#xA;&#xD;&#xA; 'End With &#xD;&#xA;    &#xD;&#xA; 'rng=ws.Range(&quot;A1&quot;,&quot;O&quot;+lastRow.ToString)'Selects the given range of sheet 1'&#xD;&#xA; 'p_ws=CType(wb.Sheets.Add,Microsoft.Office.Interop.Excel.Worksheet)'create a empty and and name the sheet as pivot table'&#xD;&#xA; 'p_ws.Name=&quot;Pivot Test&quot;&#xD;&#xA; p_ws=CType(wb1.Sheets(&quot;Task count by GLO Team&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; p_ws.Activate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; p_rng= CType(p_ws.Range(&quot;T13&quot;),Microsoft.Office.Interop.Excel.Range) 'Specify the first cell for the pivot table'&#xD;&#xA; &#xD;&#xA; 'Creation pivot Cache and pivot table '&#xD;&#xA; Dim oPivotCache As Microsoft.Office.Interop.Excel.PivotCache=Nothing&#xD;&#xA; Dim oPivotTables As Microsoft.Office.Interop.Excel.PivotTables=Nothing&#xD;&#xA; Dim oPivotTable As Microsoft.Office.Interop.Excel.PivotTable=Nothing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;oPivotCache =CType(wb1.PivotCaches.Create(SourceType:=Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal,SourceData:=cn,Version:=Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion15),Microsoft.Office.Interop.Excel.PivotCache)&#xD;&#xA;&#xD;&#xA;oPivotTables=DirectCast(p_ws.PivotTables(Type.Missing),Microsoft.Office.Interop.Excel.PivotTables)&#xD;&#xA;&#xD;&#xA; oPivotTable=oPivotTables.Add(oPivotCache,p_rng,&quot;TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY&quot;,Type.Missing,Type.Missing)'first paramenter is cache,range the table should start,table name'&#xD;&#xA; oPivotTable.SmallGrid=False&#xD;&#xA; oPivotTable.ShowTableStyleRowStripes=True&#xD;&#xA; oPivotTable.TableStyle2=&quot;PivotStyleMedium2&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; 'Creation of pivot Fields'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Dim CubeField1 As Microsoft.Office.Interop.Excel.CubeField &#xD;&#xA;Dim CubeField2 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField3 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField4 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField5 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField6 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField7 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField8 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField9 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;  Dim CubeField10 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; '  Dim CubeField11 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim index As Integer = 1&#xD;&#xA;While index &lt;= CInt(oPivotTable.CubeFields.Count)&#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Yr]&quot;) Then &#xD;&#xA;&#xD;&#xA;  CubeField1= oPivotTable.CubeFields(index)&#xD;&#xA;   CubeField1.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;   CubeField1.CurrentPageName=&quot;[Range].[Task Closed Fiscal Yr].&amp;[FY'&quot;+arg_CurrentFiscalYear+&quot;]&quot;&#xD;&#xA;  'CubeField1.Caption(&quot;Diversity (Yes/No)&quot;)&#xD;&#xA; Else &#xD;&#xA; End If &#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Status]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField2= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField2.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  CubeField2.CurrentPageName=&quot;[Range].[Task Status].&amp;[Closed-Complete]&quot;&#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Ticket Stage]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField3= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  'CubeField3.CurrentPageName=&quot;[Range].[Ticket Stage]&quot;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Catalog]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField4= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Requested For Region]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField5= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging Grouping]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField6= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField6.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Assigned to]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField7= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Number]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField8= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField8 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlDistinctCount)&#xD;&#xA;   oPivotTable.AddDataField(CubeField8)&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;    If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Qtr]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField9= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField9.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;    If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Category]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField10= oPivotTable.CubeFields(index)&#xD;&#xA;  'CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA; index += 1&#xD;&#xA;End While&#xD;&#xA; CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA;Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(oPivotTable.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA; CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; CPTF=CType(PTFs.Item(&quot;[Range].[Item Category].[Item Category]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA;CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; 'Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(PivotAPSpend.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Ticket Stage].[Ticket Stage]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index1 As Integer = 1&#xD;&#xA;Dim arrstring As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm In pivotItms&#xD;&#xA;&#xD;&#xA; If pvtitm.Name.equals( &quot;[Range].[Ticket Stage].&amp;[Cancelled]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring=CType(pvtitm.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring.Add(itemstring)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF.VisibleItemsList =arrstring.ToArray&#xD;&#xA;    CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA; CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend1 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs1 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs1 = CType(PivotAPSpend1.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF1 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF1=CType(PTFs1.Item(&quot;[Range].[Item Catalog].[Item Catalog]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms1 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF1.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index2 As Integer = 1&#xD;&#xA;Dim arrstring1 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring1 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm1 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm1 In pivotItms1&#xD;&#xA;&#xD;&#xA; If pvtitm1.Name.equals( &quot;[Range].[Item Catalog].&amp;[Incoming]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring1=CType(pvtitm1.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring1.Add(itemstring1)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF1.VisibleItemsList =arrstring1.ToArray&#xD;&#xA;    CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend2 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs2 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs2 = CType(PivotAPSpend2.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF2 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF2=CType(PTFs2.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms2 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF2.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index3 As Integer = 1&#xD;&#xA;Dim arrstring2 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring2 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm2 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm2 In pivotItms2&#xD;&#xA;&#xD;&#xA; If pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;[Mandhare, Ajay]&quot;) Or pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring2=CType(pvtitm2.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring2.Add(itemstring2)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF2.VisibleItemsList =arrstring2.ToArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend3 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs3 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs3 = CType(PivotAPSpend3.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF3 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF3=CType(PTFs3.Item(&quot;[Range].[Requested For Region].[Requested For Region]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms3 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF3.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index4 As Integer = 1&#xD;&#xA;Dim arrstring3 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring3 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm3 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm3 In pivotItms3&#xD;&#xA;&#xD;&#xA; If pvtitm3.Name.equals(&quot;[Range].[Requested For Region].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring3=CType(pvtitm3.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring3.Add(itemstring3)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF3.VisibleItemsList =arrstring3.ToArray&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA;oPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow)  &#xD;&#xA;&#xD;&#xA;Dim Count As Integer&#xD;&#xA;Dim tempstr As String&#xD;&#xA;tempstr=p_ws.Range(&quot;T:T&quot;).Find(&quot;Grand Total&quot;).Address.ToString.Replace(&quot;$&quot;,&quot;&quot;).ToString&#xD;&#xA;count=CInt((Split(tempstr.ToString,&quot;T&quot;)(1).ToString))&#xD;&#xA;p_ws.Range(&quot;V15:AG&quot;+Count.ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA; Throw es&#xD;&#xA;Finally&#xD;&#xA; wb1.Save&#xD;&#xA; wb1.Close&#xD;&#xA; excel.Quit&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code-TASK COUNT BY GLO TEAM, TASK AGING GROUP AND BY ITEM CATEGORY" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_GLOTemplatePath">[in_GLOTemplatePath]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim excel As microsoft.Office.Interop.Excel.Application&#xD;&#xA;Dim wb1 As Microsoft.Office.Interop.Excel.Workbook&#xD;&#xA;Dim ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim p_ws As Microsoft.Office.Interop.Excel.Worksheet&#xD;&#xA;Dim rng As Microsoft.Office.Interop.Excel.Range &#xD;&#xA;Dim p_rng As Microsoft.Office.Interop.Excel.Range&#xD;&#xA;Dim lastRow As Integer&#xD;&#xA;Try&#xD;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xD;&#xA; 'wb = excel.Workbooks.Open(&quot;C:\Users\svc_friend2\Documents\GLO_All_Data_with_SLAs 5_7_19.xlsx&quot;)'Open the excel the file'&#xD;&#xA; wb1=excel.Workbooks.Open(arg_GLOTemplatePath+&quot;GLO_&quot;+arg_CurrentFiscalMonth+&quot;’&quot;+arg_CurrentFiscalYear+&quot;_YTD_DASHBOARD.xlsb&quot;)&#xD;&#xA; excel.Visible=True&#xD;&#xA; &#xD;&#xA;&#xD;&#xA; ws=CType(wb1.Sheets(&quot;Data&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; ws.Activate&#xD;&#xA;&#xD;&#xA; lastRow = ws.UsedRange.Rows.Count&#xD;&#xA; &#xD;&#xA;Dim con As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;Dim cn As Microsoft.Office.Interop.Excel.WorkbookConnection&#xD;&#xA;For Each con In wb1.Connections&#xD;&#xA; If con.Name &lt;&gt; &quot;DataModel&quot; Then&#xD;&#xA; cn =con&#xD;&#xA; End If&#xD;&#xA;Next &#xD;&#xA;  &#xD;&#xA;  'With wb1&#xD;&#xA; &#xD;&#xA; 'cn=  .Connections.Add2(Name :=&quot;SpendDataModel&quot;,Description:=&quot;DataModel&quot;,ConnectionString:=&quot;WORKSHEET;&quot;+wb1.FullName,CommandText:=ws.Name+&quot;!&quot;+ws.Range(&quot;A1&quot;).CurrentRegion.address,lCmdtype:=Microsoft.Office.Interop.Excel.XlCmdType.xlCmdExcel,CreateModelConnection:=True)&#xD;&#xA;&#xD;&#xA; 'End With &#xD;&#xA;    &#xD;&#xA; 'rng=ws.Range(&quot;A1&quot;,&quot;O&quot;+lastRow.ToString)'Selects the given range of sheet 1'&#xD;&#xA; 'p_ws=CType(wb.Sheets.Add,Microsoft.Office.Interop.Excel.Worksheet)'create a empty and and name the sheet as pivot table'&#xD;&#xA; 'p_ws.Name=&quot;Pivot Test&quot;&#xD;&#xA; p_ws=CType(wb1.Sheets(&quot;Task count by GLO Team&quot;),Microsoft.Office.Interop.Excel.Worksheet)'select a sheet and activiates'&#xD;&#xA; p_ws.Activate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; &#xD;&#xA; p_rng= CType(p_ws.Range(&quot;AI13&quot;),Microsoft.Office.Interop.Excel.Range) 'Specify the first cell for the pivot table'&#xD;&#xA; &#xD;&#xA; 'Creation pivot Cache and pivot table '&#xD;&#xA; Dim oPivotCache As Microsoft.Office.Interop.Excel.PivotCache=Nothing&#xD;&#xA; Dim oPivotTables As Microsoft.Office.Interop.Excel.PivotTables=Nothing&#xD;&#xA; Dim oPivotTable As Microsoft.Office.Interop.Excel.PivotTable=Nothing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;oPivotCache =CType(wb1.PivotCaches.Create(SourceType:=Microsoft.Office.Interop.Excel.XlPivotTableSourceType.xlExternal,SourceData:=cn,Version:=Microsoft.Office.Interop.Excel.XlPivotTableVersionList.xlPivotTableVersion15),Microsoft.Office.Interop.Excel.PivotCache)&#xD;&#xA;&#xD;&#xA;oPivotTables=DirectCast(p_ws.PivotTables(Type.Missing),Microsoft.Office.Interop.Excel.PivotTables)&#xD;&#xA;&#xD;&#xA; oPivotTable=oPivotTables.Add(oPivotCache,p_rng,&quot;TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY&quot;,Type.Missing,Type.Missing)'first paramenter is cache,range the table should start,table name'&#xD;&#xA; oPivotTable.SmallGrid=False&#xD;&#xA; oPivotTable.ShowTableStyleRowStripes=True&#xD;&#xA; oPivotTable.TableStyle2=&quot;PivotStyleMedium2&quot;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; 'Creation of pivot Fields'&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;Dim CubeField1 As Microsoft.Office.Interop.Excel.CubeField &#xD;&#xA;Dim CubeField2 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField3 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField4 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField5 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim CubeField6 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField7 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField8 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA; Dim CubeField9 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;  Dim CubeField10 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;  ' Dim CubeField11 As Microsoft.Office.Interop.Excel.CubeField&#xD;&#xA;Dim index As Integer = 1&#xD;&#xA;While index &lt;= CInt(oPivotTable.CubeFields.Count)&#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Yr]&quot;) Then &#xD;&#xA;&#xD;&#xA;  CubeField1= oPivotTable.CubeFields(index)&#xD;&#xA;   CubeField1.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;   CubeField1.CurrentPageName=&quot;[Range].[Task Closed Fiscal Yr].&amp;[FY'&quot;+arg_CurrentFiscalYear+&quot;]&quot;&#xD;&#xA;  'CubeField1.Caption(&quot;Diversity (Yes/No)&quot;)&#xD;&#xA; Else &#xD;&#xA; End If &#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Status]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField2= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField2.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  CubeField2.CurrentPageName=&quot;[Range].[Task Status].&amp;[Closed-Complete]&quot;&#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Ticket Stage]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField3= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;  'CubeField3.CurrentPageName=&quot;[Range].[Ticket Stage]&quot;&#xD;&#xA; Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Catalog]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField4= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;&#xD;&#xA; If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Requested For Region]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField5= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;  If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Aging Grouping]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField6= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField6.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;     If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Assigned to]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField7= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Number]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField8= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField8 = oPivotTable.CubeFields.GetMeasure(oPivotTable.CubeFields(index).Name, Microsoft.Office.Interop.Excel.XlConsolidationFunction.xlDistinctCount)&#xD;&#xA;   oPivotTable.AddDataField(CubeField8)&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;    If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Task Closed Fiscal Qtr]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField9= oPivotTable.CubeFields(index)&#xD;&#xA;  CubeField9.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;    If oPivotTable.CubeFields(index).Name.ToString.Equals(&quot;[Range].[Item Category]&quot;) Then&#xD;&#xA;&#xD;&#xA;   CubeField10= oPivotTable.CubeFields(index)&#xD;&#xA;  'CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA; &#xD;&#xA;  Else &#xD;&#xA;  End If &#xD;&#xA;   &#xD;&#xA;  &#xD;&#xA; index += 1&#xD;&#xA;End While&#xD;&#xA;CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA;CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlColumnField&#xD;&#xA;CubeField7.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField &#xD;&#xA;&#xD;&#xA;Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(oPivotTable.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;)   &#xD;&#xA;CubeField10.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Item Category].[Item Category]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;CPTF.Autosort(2,&quot;[Measures].[Distinct Count of Task Number]&quot;) &#xD;&#xA;CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; 'Dim PTFs As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs = CType(PivotAPSpend.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'Dim CPTF As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF=CType(PTFs.Item(&quot;[Range].[Ticket Stage].[Ticket Stage]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index1 As Integer = 1&#xD;&#xA;Dim arrstring As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm In pivotItms&#xD;&#xA;&#xD;&#xA; If pvtitm.Name.equals( &quot;[Range].[Ticket Stage].&amp;[Cancelled]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring=CType(pvtitm.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring.Add(itemstring)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF.VisibleItemsList =arrstring.ToArray&#xD;&#xA;    CubeField3.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA; &#xD;&#xA; CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend1 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs1 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs1 = CType(PivotAPSpend1.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF1 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF1=CType(PTFs1.Item(&quot;[Range].[Item Catalog].[Item Catalog]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms1 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF1.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index2 As Integer = 1&#xD;&#xA;Dim arrstring1 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring1 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm1 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm1 In pivotItms1&#xD;&#xA;&#xD;&#xA; If pvtitm1.Name.equals( &quot;[Range].[Item Catalog].&amp;[Incoming]&quot; )Then&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA; Else &#xD;&#xA;  &#xD;&#xA;  itemstring1=CType(pvtitm1.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring1.Add(itemstring1)&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF1.VisibleItemsList =arrstring1.ToArray&#xD;&#xA;    CubeField4.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend2 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs2 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs2 = CType(PivotAPSpend2.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF2 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF2=CType(PTFs2.Item(&quot;[Range].[Task Assigned to].[Task Assigned to]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms2 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF2.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index3 As Integer = 1&#xD;&#xA;Dim arrstring2 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring2 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm2 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm2 In pivotItms2&#xD;&#xA;&#xD;&#xA; If pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;[Mandhare, Ajay]&quot;) Or pvtitm2.Name.equals(&quot;[Range].[Task Assigned to].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring2=CType(pvtitm2.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring2.Add(itemstring2)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF2.VisibleItemsList =arrstring2.ToArray&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlRowField&#xD;&#xA;&#xD;&#xA; Dim PivotAPSpend3 As Microsoft.Office.Interop.Excel.PivotTable=  CType(p_ws.PivotTables(&quot;TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY&quot;),Microsoft.Office.Interop.Excel.PivotTable)&#xD;&#xA;&#xD;&#xA; Dim PTFs3 As Microsoft.Office.Interop.Excel.PivotFields&#xD;&#xA;PTFs3 = CType(PivotAPSpend3.PivotFields,Microsoft.Office.Interop.Excel.PivotFields)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim CPTF3 As Microsoft.Office.Interop.Excel.PivotField&#xD;&#xA;CPTF3=CType(PTFs3.Item(&quot;[Range].[Requested For Region].[Requested For Region]&quot;),Microsoft.Office.Interop.Excel.PivotField)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim pivotItms3 As microsoft.Office.Interop.Excel.PivotItems = CType(CPTF3.PivotItems,Microsoft.Office.Interop.Excel.PivotItems)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Dim index4 As Integer = 1&#xD;&#xA;Dim arrstring3 As System.Collections.ArrayList = New System.Collections.ArrayList&#xD;&#xA;&#xD;&#xA;Dim itemstring3 As String&#xD;&#xA;&#xD;&#xA;Dim pvtitm3 As Microsoft.Office.Interop.Excel.PivotItem&#xD;&#xA;For Each pvtitm3 In pivotItms3&#xD;&#xA;&#xD;&#xA; If pvtitm3.Name.equals(&quot;[Range].[Requested For Region].&amp;&quot;)  Then  &#xD;&#xA;&#xD;&#xA; Else &#xD;&#xA;     &#xD;&#xA;  itemstring3=CType(pvtitm3.Name,String)&#xD;&#xA;  &#xD;&#xA;  arrstring3.Add(itemstring3)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; End If  &#xD;&#xA;Next &#xD;&#xA;&#xD;&#xA;CPTF3.VisibleItemsList =arrstring3.ToArray&#xD;&#xA;CubeField5.Orientation=Microsoft.Office.Interop.Excel.XlPivotFieldOrientation.xlPageField&#xD;&#xA;&#xD;&#xA;oPivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType.xlTabularRow)  &#xD;&#xA;Dim Count As Integer&#xD;&#xA;Dim tempstr As String&#xD;&#xA;tempstr=p_ws.Range(&quot;AI:AI&quot;).Find(&quot;Grand Total&quot;).Address.ToString.Replace(&quot;$&quot;,&quot;&quot;).ToString&#xD;&#xA;count=CInt((Split(tempstr.ToString,&quot;AI&quot;)(1).ToString))&#xD;&#xA;p_ws.Range(&quot;AK15:AO&quot;+Count.ToString).HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;&#xD;&#xA;p_ws.Range(&quot;A14&quot;).EntireRow.HorizontalAlignment=Microsoft.Office.Interop.Excel.XlHAlign.xlHAlignCenter&#xD;&#xA;Catch es As Exception&#xD;&#xA; Console.WriteLine(es.Message)&#xD;&#xA; Throw es&#xD;&#xA;Finally&#xD;&#xA; wb1.Save&#xD;&#xA; wb1.Close&#xD;&#xA; excel.Quit&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code-TASK COUNT BY GLO TEAM, BY QTR AND BY ITEM CATEGORY" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalYear">[in_CurrentYear]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_CurrentFiscalMonth">[in_CurrentMonth]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_GLOTemplatePath">[in_GLOTemplatePath]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Second Sheet Pivot Complete" />
    <sads:DebugSymbol.Symbol>d3pDOlxVc2Vyc1xzdmNfYm90cGQxNlxEb2N1bWVudHNcVWlQYXRoXEdMTyBUQVQgRGFzaGJvYXJkIEF1dG9tYXRpb25cQ3VzdG9tIFdvcmtmbG93c1xUYXNrIGNvdW50IGJ5IEdMTyBUZWFtIENvbXBvbmVudHMueGFtbBddA4MBDgIBAV4FZBUCASBlBWsVAgEZbAVyFQIBEnMFeRUCAQt6BYABFQIBBIEBBYEBkgECAQJhTmFeAgElYkxiYAIBI2BPYGACASFoTmheAgEeaUxpYAIBHGdPZ2ACARpuTm5eAgEXcExwYAIBFW9Pb2ACARN2TnZeAgEQd0x3YAIBDnVPdWACAQx8TnxeAgEJfkx+YAIBB31PfWACAQWBAXKBAY8BAgED</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="InvokeCode_2" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="InvokeCode_3" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="InvokeCode_4" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="InvokeCode_5" sap:VirtualizedContainerService.HintSize="314.4,164.8" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336.8,1241.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Task_count_by_GLO_Team_Components_1" sap:VirtualizedContainerService.HintSize="376.8,1321.6" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>